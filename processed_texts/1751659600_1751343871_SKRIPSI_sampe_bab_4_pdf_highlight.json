{
  "original_text": "DETEKSI KEMIRIPAN DOKUMEN EXECUTIVE SUMMARY\nPADA PROSES PENGAJUAN SKRIPSI DI FASILKOM-TI\nDENGAN IMPLEMENTASI DOC2VEC DAN\nCOSINE SIMILARITY\nSKRIPSI\nWARIDA HAFNI HASIBUAN\n201402018\nPROGRAM STUDI S1 TEKNOLOGI INFORMASI\nFAKULTAS ILMU KOMPUTER DAN TEKNOLOGI INFORMASI\nUNIVERSITAS SUMATERA UTARA\n2024\n2\nBAB 1\nPENDAHULUAN\n1.1 Latar Belakang\nDi era digital yang terus berkembang, teknologi telah menjadi elemen fundamental dalam\nberbagai aspek kehidupan, termasuk dunia pendidikan. Transformasi digital yang terjadi\nsecara masif telah membawa perubahan signifikan dalam cara kita mengakses,\nmenyimpan, dan memproses informasi (Mustariani, 2023). Teknologi tidak hanya\nmerambah dunia bisnis dan komunikasi, tetapi juga memainkan peran penting dalam\nmeningkatkan kualitas pendidikan. Di tingkat global, digitalisasi telah menciptakan\nsistem yang lebih efisien dan efektif dalam mendukung proses pembelajaran, penelitian,\ndan evaluasi akademik (Siringoringo & Alfaridzi, 2024). Dalam konteks ini, tantangan\nyang dihadapi oleh institusi pendidikan tinggi semakin kompleks, terutama dalam\nmengelola volume dan keragaman dokumen akademik yang terus meningkat.\nDi Fakultas Ilmu Komputer dan Teknologi Informasi Universitas Sumatera Utara,\nproses pengecekan kesamaan dokumen executive summary masih dilakukan secara\nmanual oleh beberapa dosen penguji yang memiliki tanggung jawab di bidang penelitian\nyang berbeda. Masing-masing dosen melakukan penilaian berdasarkan referensi dan\npertimbangan profesional di bidangnya, namun karena keterbatasan akses data serta\nbelum adanya sistem terintegrasi, proses ini dapat menghasilkan variasi dalam evaluasi.\nHal tersebut menjadikan proses pengecekan rawan inkonsistensi, terutama ketika jumlah\ndokumen yang dinilai cukup banyak dan melibatkan banyak pihak dalam waktu yang\nbersamaan.\nSelain itu, proses pengecekan kesamaan dokumen executive summary juga masih\nmenghadapi kendala besar dalam hal ketersediaan data referensi yang memadai. Salah\nsatu hambatan utama yang dihadapi adalah tidak tersedianya akses penuh terhadap\nkeseluruhan arsip dokumen skripsi alumni secara terpusat dan digital. Dalam praktiknya,\ndosen penguji hanya dapat mengakses sebagian kecil dokumen terdahulu yang tersedia,\nsehingga proses verifikasi terhadap kemungkinan adanya kemiripan topik menjadi\nterbatas cakupannya. Akibatnya, terdapat potensi kemiripan atau duplikasi tema\npenelitian yang tidak terdeteksi secara dini. Jika hal ini terus berlanjut, maka bukan tidak\nmungkin akan berdampak pada menurunnya kualitas hasil penelitian mahasiswa dan\nkredibilitas akademik lembaga. Oleh karena itu, diperlukan pendekatan sistemik berbasis\nteknologi yang dapat membantu mendukung proses pengecekan dokumen secara lebih\nluas, konsisten, dan terintegrasi dengan basis data skripsi yang tersedia.\nPlagiarisme dan duplikasi penelitian merupakan masalah serius yang dapat\n3\nmengurangi integritas institusi pendidikan dan menurunkan kepercayaan terhadap\nkualitas akademik di Indonesia. Selain merusak reputasi pendidikan tinggi, plagiarisme\nmenghambat pengembangan ilmu pengetahuan yang orisinal. Dengan meningkatnya\ntuntutan terhadap kualitas karya ilmiah, institusi pendidikan perlu memiliki sistem deteksi\nkesamaan dokumen yang andal untuk memastikan karya mahasiswa memenuhi standar\nakademik. Sistem ini penting untuk menjaga integritas akademik serta mendorong\nmahasiswa menghasilkan penelitian yang orisinal dan berkualitas, sehingga dapat\nmendukung terciptanya penelitian yang bermutu dan berintegritas (Wibowo, 2012).\nDalam konteks ini, teknologi pemrosesan bahasa alami (Natural Language\nProcessing atau NLP) memainkan peran penting dalam pengembangan sistem deteksi\nkesamaan dokumen. Salah satu metode yang sangat efektif dalam mendeteksi kesamaan\ndokumen adalah Doc2Vec, sebuah teknik embedding dokumen yang mampu\nmerepresentasikan dokumen sebagai vektor dalam ruang multidimensi. Vektor ini\nkemudian digunakan untuk menghitung kesamaan antar dokumen dengan metode Cosine\nSimilarity. Doc2Vec dikembangkan untuk mengatasi kekurangan metode berbasis kata\n(word-based methods) seperti TF-IDF yang tidak bisa menangkap makna semantik dari\nsebuah kalimat secara menyeluruh. Sementara Cosine Similarity telah terbukti sebagai\nmetode yang sangat andal dalam mengukur kesamaan antara dua vektor.\nBerbagai penelitian telah dilakukan untuk mengembangkan sistem deteksi\nplagiarisme dan kesamaan teks menggunakan beragam metode dan teknologi. Pawestri\n& Suyanto (2024) dalam penelitiannya yang berjudul \"Analisis Perbandingan Metode\nSimilarity untuk Kemiripan Dokumen Bahasa Indonesia pada Deteksi Kemiripan Teks\nBahasa Indonesia\" menunjukkan bahwa Cosine Similarity memiliki tingkat akurasi yang\ntinggi, mencapai 98% dalam mendeteksi kemiripan dokumen berbahasa Indonesia, lebih\nunggul dibandingkan metode lain seperti Jaccard dan Euclidean Distance. Ansis et al.\n(2024) dalam penelitian berjudul \"Deteksi Plagiat Tesis Berbahasa Indonesia\nMenggunakan Metode Cosine Similarity\" mendukung temuan ini, dengan hasil penelitian\nyang menunjukkan bahwa Cosine Similarity mencapai akurasi 96,63%, jauh lebih tinggi\ndibandingkan Jaccard Similarity.\nWadekar et al. (2021) dalam penelitian berjudul \"Plagiarism Detection with\nParaphrase Recognizer Using Deep Learning\" mengembangkan sistem deteksi\n4\nplagiarisme menggunakan kombinasi Doc2Vec, Siamese LSTM, dan CNN, yang\nmencapai akurasi sebesar 97,26% dalam mendeteksi berbagai bentuk plagiarisme,\ntermasuk parafrase. Penelitian ini menunjukkan efektivitas Doc2Vec saat dikombinasikan\ndengan model deep learning untuk deteksi kemiripan teks yang lebih mendalam.\nSementara itu, Cahyono (2020) dalam penelitiannya yang berjudul \"Model Perbandingan\nDokumen Karya Ilmiah Dengan Metode Fragmentasi Menggunakan Algoritma\nKesamaan Dokumen Doc2Vec\" menggabungkan Doc2Vec dengan teknik fragmentasi,\nyang terbukti mampu meningkatkan akurasi dan efisiensi komputasi dalam mendeteksi\nplagiarisme pada dokumen akademik berbahasa Indonesia.\nBerdasarkan penelitian-penelitian yang telah dilakukan, teknologi seperti\nDoc2Vec dan Cosine Similarity menunjukkan potensi yang signifikan dalam\nmeningkatkan efisiensi dan akurasi deteksi kesamaan dokumen akademik. Doc2Vec\nmemungkinkan pemetaan dokumen ke dalam vektor yang menangkap makna semantik\nsecara lebih mendalam, sedangkan Cosine Similarity menyediakan metode yang andal\nuntuk menghitung kesamaan antar dokumen berdasarkan representasi vektor tersebut.\nDengan penerapan sistem otomatis yang memanfaatkan teknologi ini, proses pengecekan\nkesamaan dokumen dapat dilakukan dengan lebih cepat dan akurat, tanpa ketergantungan\nyang berlebihan pada tenaga manusia. Sistem ini tidak hanya mampu melakukan\npemeriksaan kesamaan dalam aspek struktur dan konten dokumen, tetapi juga dapat\nmenangkap makna semantik antar dokumen dengan lebih baik, yang sulit dicapai melalui\nmetode manual yang selama ini digunakan. Penggunaan teknologi ini memungkinkan\nevaluasi yang lebih transparan, objektif, dan adil bagi setiap mahasiswa, sekaligus\nmembantu menjaga integritas akademik di lingkungan pendidikan tinggi. Dengan\nmeminimalkan risiko kesalahan subjektif yang sering muncul dalam pengecekan manual,\nsistem otomatis ini diharapkan dapat menciptakan suasana akademik yang lebih kondusif\nuntuk pengembangan penelitian yang orisinal.\nOleh karena itu, penelitian ini bertujuan untuk mengembangkan sistem deteksi\nkesamaan executive summary skripsi di Fakultas Ilmu Komputer dan Teknologi\nInformasi (Fasilkom-TI) yang lebih efisien dan akurat. Dengan adanya sistem ini,\ndiharapkan proses evaluasi orisinalitas karya ilmiah mahasiswa dapat berlangsung lebih\ncepat dan objektif, sehingga mendukung tugas kepala bidang dalam memeriksa kesamaan\ndokumen secara menyeluruh. Selain itu, implementasi sistem otomatis ini diharapkan\n5\nmampu memberikan kontribusi positif terhadap kualitas penelitian yang dihasilkan oleh\nmahasiswa. Dengan pendekatan yang lebih sistematis dan berbasis teknologi, penelitian\nini diharapkan dapat memenuhi tuntutan akademik yang semakin tinggi, sekaligus\nmemfasilitasi mahasiswa dalam menghasilkan karya ilmiah yang inovatif dan\nberkualitas.\n1.2 Rumusan Masalah\nProses pengecekan kesamaan executive summary di Fakultas Ilmu Komputer dan\nTeknologi Informasi Universitas Sumatera Utara belum berjalan optimal karena\nketerbatasan akses terhadap arsip digital skripsi alumni yang terpusat dan lengkap.\nKondisi ini membuat verifikasi topik oleh dosen penguji hanya bergantung pada\ndokumen fisik terbatas atau ingatan personal, sehingga rawan terjadi duplikasi topik yang\ntak terdeteksi. Ketidaktersediaan data historis yang memadai turut memperlemah proses\nvalidasi orisinalitas penelitian mahasiswa. Maka dari itu, dibutuhkan sistem otomatis\nberbasis teknologi yang dapat mendeteksi kemiripan dokumen secara efisien, akurat, dan\nkonsisten sebagai upaya menjaga integritas serta mutu akademik secara menyeluruh.\n1.3 Tujuan Penelitian\nPenelitian ini bertujuan mengembangkan sistem deteksi kesamaan dokumen executive\nsummary yang efisien dan akurat dengan menggunakan algoritma Doc2Vec untuk\nrepresentasi dokumen dan Cosine Similarity untuk mengukur kemiripan antar dokumen.\nSistem ini diharapkan dapat membantu dosen penguji dalam verifikasi topik skripsi dan\nmeningkatkan kualitas evaluasi akademik di Fakultas Ilmu Komputer dan Teknologi\nInformasi Universitas Sumatera Utara.\n1.4 Batasan Masalah\nBatasan masalah pada penelitian ini memiliki batasan sebagai berikut:\n1. Penelitian ini hanya melibatkan dokumen berbahasa Indonesia dan tidak mencakup\njenis dokumen akademik lain seperti proposal penelitian atau laporan ilmiah.\n2. Data skripsi alumni yang digunakan sebagai referensi pengecekan kemiripan hanya\nmencakup sebagian arsip yang tersedia dan dapat diakses oleh peneliti.\n3. Dokumen Executive Summary yang menjadi objek deteksi kemiripan merupakan\nberkas yang diunggah oleh dosen penguji melalui sistem yang dikembangkan.\n4. Sistem dikembangkan untuk mendeteksi kemiripan teks antara dokumen Executive\nSummary yang diunggah dengan dokumen skripsi alumni yang tersedia sebagai\nreferensi.\n5. Deteksi kemiripan hanya dilakukan pada konten teks, tidak mencakup elemen non-teks\nseperti gambar, tabel, atau diagram yang terdapat dalam dokumen.\n6\n1.5 Manfaat Penelitian\nDari penelitian ini diperoleh beberapa manfaat antara lain :\n1. Meningkatkan efisiensi dan akurasi dalam pengecekan kesamaan dokumen\nexecutive summary melalui sistem otomatis.\n2. Mendukung orisinalitas dan kualitas akademik mahasiswa melalui sistem deteksi\nkesamaan yang lebih andal dan konsisten.\n3. Mengurangi beban kerja manual bagi staf akademik dalam proses penilaian\nskripsi.\n1.6 Metodologi Penelitian\nTahapan-Tahapan yang akan dilakukan pada penelitian ini adalah:\n1. Analisis Permasalahan\nLangkah pertama dalam penelitian ini adalah mengidentifikasi dan menganalisis\npermasalahan yang terjadi dalam proses pengecekan manual terhadap kesamaan\ndokumen executive summary di Fakultas Ilmu Komputer dan Teknologi\nInformasi Universitas Sumatera Utara. Melalui analisis ini, diidentifikasi\nsejumlah tantangan utama, seperti waktu pengecekan yang lama, adanya potensi\nkesalahan subjektif, serta beban kerja yang tinggi pada dosen. Hasil dari analisis\nini akan digunakan sebagai dasar untuk merancang solusi yang lebih efisien dalam\nmendeteksi kesamaan dokumen.\n2. Studi Literatur\nSetelah melakukan analisis permasalahan, dilanjutkan dengan studi literatur\nuntuk mencari solusi teknologi yang sesuai. Pada tahap ini, berbagai referensi\nyang relevan dikumpulkan dari sumber seperti buku, jurnal ilmiah, dan artikel\nakademik yang berkaitan dengan Natural Language Processing (NLP),\nkhususnya tentang model Doc2Vec dan algoritma Cosine Similarity. Hasil dari\nstudi ini membantu dalam merumuskan pendekatan yang tepat untuk\npengembangan sistem yang lebih efektif.\n3. Pengumpulan dan Pemrosesan Dataset\nPada tahap pengumpulan dan pemrosesan dataset, peneliti mengumpulkan dokumen\nskripsi alumni Fakultas Ilmu Komputer dan Teknologi Informasi Universitas\nSumatera Utara yang tersedia dan dapat diakses, meskipun terbatas pada sebagian\ndokumen saja. Setelah data terkumpul, dilakukan proses praproses untuk\nmembersihkan teks dari elemen yang kurang relevan seperti gambar, tabel, dan\nnomor halaman, yang meliputi tokenisasi, normalisasi, serta transformasi teks\nmenjadi representasi vektor yang akan diolah menggunakan model Doc2Vec.\n7\nSelanjutnya, penyesuaian hyperparameter model seperti ukuran vektor (vector size),\njendela konteks kata (window size), dan jumlah iterasi pelatihan (epochs) dilakukan\nsecara seksama untuk mengoptimalkan performa model dalam mendeteksi kemiripan\ndokumen.\n4. Perancangan Sistem dan Model\nBerdasarkan hasil analisis dan studi literatur, dirancang sistem deteksi kesamaan\ndokumen yang menggunakan model Doc2Vec untuk menghasilkan representasi\nvektor dari dokumen. Algoritma Cosine Similarity digunakan untuk mengukur\nkesamaan antara dokumen executive summary yang baru dengan skripsi yang\ntelah ada dalam database. Desain sistem juga mencakup arsitektur teknis dan\nantarmuka pengguna yang memungkinkan pengunggahan executive summary\nsecara langsung untuk dianalisis.\n5. Implementasi Sistem\nSetelah desain sistem selesai, dilakukan tahap implementasi di mana model\nDoc2Vec diintegrasikan untuk memproses teks dokumen menjadi vektor. Cosine\nSimilarity digunakan untuk menghitung kesamaan antar dokumen berdasarkan\nvektor yang dihasilkan. Sistem ini dibangun untuk memberikan hasil kesamaan\ndokumen dalam bentuk persentase yang dapat digunakan oleh staf akademik\ndalam mengevaluasi kesamaan antara dokumen yang diajukan.\n6. Pengujian Sistem\nPengujian dilakukan setelah implementasi sistem untuk memastikan bahwa\nsistem bekerja sesuai dengan spesifikasi yang diharapkan. Dataset yang sama\ndigunakan untuk uji coba, di mana executive summary yang baru dibandingkan\ndengan skripsi yang sudah ada dalam database. Evaluasi kinerja sistem dilakukan\ndengan menggunakan metrik F1-score untuk mengukur akurasi sistem dalam\nmendeteksi kesamaan teks.\n7. Dokumentasi dan Penyusunan Laporan\nTahap terakhir adalah penyusunan dokumentasi yang mendetail tentang proses\npenelitian, mulai dari analisis permasalahan hingga hasil pengujian sistem.\nDokumentasi ini digunakan untuk menyusun laporan akhir dalam bentuk skripsi,\nyang mencakup evaluasi sistem dan rekomendasi pengembangan lebih lanjut.\n1.7 Sistematika Penulisan\nAdapun untuk sistematika penulisan pada penelitian ini yaitu terdiri atas 5 bab, yakni:\nBab 1: Pendahuluan\nBab ini berisi pengantar mengenai penelitian yang dilakukan, meliputi latar belakang\npermasalahan, rumusan masalah, tujuan penelitian, batasan masalah, manfaat\n8\npenelitian, metodologi penelitian, dan sistematika penulisan. Bab ini memberikan\ngambaran umum tentang pentingnya topik yang diteliti serta alasan penggunaan\nmetode dan pendekatan yang diambil dalam penelitian ini.\nBab 2: Landasan Teori\nPada bab ini dijelaskan teori-teori yang mendasari penelitian, termasuk konsep-\nkonsep yang terkait dengan Natural Language Processing (NLP), model Doc2Vec,\nalgoritma Cosine Similarity, serta metode-metode pendeteksian kesamaan teks.\nKajian literatur dan penelitian terdahulu yang relevan juga dipaparkan sebagai dasar\nilmiah bagi pengembangan sistem yang diusulkan.\nBab 3: Analisis dan Perancangan Sistem\nBab ini menjelaskan hasil analisis terhadap permasalahan yang terjadi dalam proses\npengecekan kesamaan dokumen executive summary secara manual. Bab ini juga\nmerinci perancangan sistem yang diusulkan, termasuk arsitektur sistem, alur kerja\nsistem, serta spesifikasi teknis dari sistem deteksi kesamaan dokumen berbasis\nDoc2Vec dan Cosine Similarity.\nBab 4: Implementasi dan Pengujian Sistem\nBab ini menguraikan proses implementasi sistem berdasarkan desain yang telah\ndirancang pada bab sebelumnya. Sistem diuji untuk memastikan bahwa fungsinya\nsesuai dengan spesifikasi yang telah ditetapkan. Pengujian sistem dilakukan dengan\nmenggunakan dataset yang telah dipersiapkan dan dievaluasi berdasarkan metrik F1-\nscore untuk menilai kinerja sistem dalam mendeteksi kesamaan dokumen.\nBab 5: Kesimpulan dan Saran\nBab terakhir ini menyajikan kesimpulan dari hasil penelitian, mencakup temuan\nutama serta pencapaian tujuan penelitian. Selain itu, diberikan pula saran untuk\npengembangan sistem lebih lanjut, termasuk potensi pengembangan dan penerapan\nteknologi yang telah dihasilkan dalam penelitian ini di masa mendatang.\n9\nBAB 2\nLANDASAN TEORI\n2.1 Natural Language Processing (NLP)\nNatural Language Processing (NLP) merupakan cabang dari kecerdasan buatan\n(Artificial Intelligence) yang berfokus pada interaksi antara komputer dan bahasa\nmanusia. NLP mencakup berbagai metode dan teknik untuk memungkinkan mesin\nmemahami, menafsirkan, dan memproses bahasa alami manusia, baik dalam bentuk\nteks maupun suara (Jurafsky & Martin, 2024). Dalam konteks penelitian ini, NLP\nmemainkan peran penting dalam menganalisis teks akademik, terutama untuk\nmendeteksi kesamaan antara dokumen yang diajukan oleh mahasiswa.\nTeknik-teknik dasar dalam NLP meliputi tokenisasi, stemming, lemmatization,\ndan penghapusan stop words, yang membantu dalam praproses teks sebelum\ndigunakan dalam model pembelajaran mesin. Preprocessing ini sangat penting untuk\nmengurangi kompleksitas data dan meningkatkan akurasi analisis teks. Dalam\npenelitian ini, NLP akan digunakan sebagai landasan utama untuk mendeteksi\nkemiripan dokumen akademik dengan memanfaatkan embedding teks yang\ndihasilkan oleh model Doc2Vec.\n2.2 Doc2Vec\nDoc2Vec adalah teknik embedding dokumen yang dikembangkan dari Word2Vec,\nyang memungkinkan representasi dokumen dalam bentuk vektor berdimensi tinggi.\nDoc2Vec memungkinkan pemodelan dokumen dengan lebih baik karena mampu\nmenangkap konteks dan makna semantik dari teks secara keseluruhan, bukan hanya\nkata-kata individual seperti Word2Vec (Le et al., 2014).\nAda dua pendekatan utama dalam Doc2Vec: Distributed Memory Model of\nParagraph Vectors (PV-DM) dan Distributed Bag of Words (PV-DBOW). PV-DM\nmempertahankan urutan kata untuk memahami konteks kalimat, sementara PV-\nDBOW tidak mempertahankan urutan tetapi tetap dapat menangkap informasi\nsemantik dari dokumen. Doc2Vec telah banyak digunakan dalam berbagai aplikasi\nteks, termasuk klasifikasi dokumen, analisis sentimen, dan tentu saja, deteksi\nkesamaan dokumen. Dalam penelitian ini, Doc2Vec digunakan untuk menghasilkan\nembedding teks dari skripsi yang diajukan sehingga bisa dibandingkan dengan\ndokumen lain secara efisien.\n10\n(a) PV-DM (b) PV-DBOW\nGambar 2.1 Perbedaan cara kerja antara PV-DM dan PV-DBOW).\n2.3 Cosine Similarity\nCosine Similarity adalah salah satu metode yang paling umum digunakan untuk\nmengukur kesamaan antar dua vektor dalam ruang vektor. Metrik ini mengukur sudut\ncosinus antara dua vektor, di mana semakin kecil sudutnya, semakin mirip kedua\nvektor tersebut (Wahyuni et al., 2017).\nCosine Similarity sering digunakan dalam aplikasi deteksi plagiarisme atau\nkemiripan dokumen karena mampu mengabaikan panjang dokumen dan fokus pada\norientasi vektor dalam ruang multidimensi. Dalam penelitian ini, Cosine Similarity\ndigunakan untuk mengukur kesamaan antara embedding teks yang dihasilkan oleh\nDoc2Vec. Penerapan Cosine Similarity ini memberikan hasil yang cepat dan akurat,\nterutama dalam tugas-tugas analisis teks yang memerlukan perbandingan kemiripan\nantara dokumen yang berbeda.\nGambar 2.2 Ilustrasi proses Cosine Similarity\n11\n2.4 Plagiarisme\nPlagiarisme adalah tindakan mencuri ide, kata-kata, atau karya orang lain dan\nmenyajikannya sebagai milik sendiri tanpa memberikan pengakuan yang\nsemestinya. Dalam dunia akademik, plagiarisme adalah pelanggaran serius yang\ndapat merusak reputasi institusi dan integritas penulis (Sutrisno et al., n.d.).\nPlagiarisme dapat muncul dalam berbagai bentuk, dari pengambilan ide hingga\npenyalinan teks secara verbatim tanpa kutipan yang sesuai. Dengan meningkatnya\njumlah dokumen akademik yang dihasilkan, plagiarisme menjadi ancaman yang\nnyata, dan oleh karena itu, pendeteksian plagiarisme dengan teknologi modern\nseperti NLP dan machine learning menjadi semakin penting. Dalam konteks\npenelitian ini, deteksi plagiarisme dilakukan dengan mengidentifikasi kemiripan\nantara dokumen yang diajukan oleh mahasiswa dan karya-karya yang sudah ada,\nyang dapat dicegah dengan bantuan teknologi seperti Doc2Vec dan Cosine\nSimilarity.\n2.5 Confusion Matrix\nConfusion Matrix adalah konsep pada Machine Learning ataupun Deep Learning\nuntuk melakukan visualisasi terhadap kinerja model dalam melakukan klasifikasi\n(Caelen, 2017). Confusion Matrix berisi data mengenai hasil klasifikasi aktual dan\nprediksi yang telah dilakukan dan dihasilkan oleh model (Santra & Christy, 2012).\nGambar 2.3 Confusion Matrix dalam matrix 2x2\nDalam konteks deteksi kemiripan dokumen Executive Summary skripsi, Confusion\nMatrix terdiri dari empat komponen utama (P. Singh et al., 2021):True Positive (TP):\nJumlah dokumen yang benar-benar mirip dan terdeteksi sebagai mirip oleh sistem.\n1. True Negative (TN): Jumlah dokumen yang benar-benar tidak mirip dan\nterdeteksi sebagai tidak mirip oleh sistem.\n2. False Positive (FP): Jumlah dokumen yang sebenarnya tidak mirip, tetapi sistem\nsalah mengidentifikasinya sebagai mirip.\n3. False Negative (FN): Jumlah dokumen yang sebenarnya mirip, tetapi sistem\ngagal mendeteksinya.\nDari matriks ini, beberapa metrik penting digunakan untuk mengevaluasi performa\nsistem deteksi kemiripan dokumen, antara lain:\n12\n1. Accuracy (akurasi), yaitu rasio prediksi yang benar dari keseluruhan data,\ndihitung dengan rumus:\n2. Precision (presisi), yaitu proporsi dokumen yang diprediksi mirip dan benar-\nbenar mirip, dihitung dengan rumus:\n3. Recall (sensitivitas), yaitu proporsi dokumen mirip yang berhasil dideteksi\nsebagai mirip oleh sistem, dihitung dengan rumus:\n4. F1 Score, yaitu rata-rata harmonik antara precision dan recall yang\nmenggambarkan keseimbangan keduanya, dihitung dengan rumus:\nPenggunaan Confusion Matrix dalam penelitian ini membantu mengukur sejauh\nmana sistem deteksi kemiripan dokumen mampu mengidentifikasi dokumen yang\nbenar-benar mirip dan menghindari kesalahan klasifikasi, sehingga evaluasi performa\nsistem menjadi lebih komprehensif dan objektif.\n2.6 Penelitian Terdahulu\nBerbagai penelitian telah dilakukan untuk menilai keefektifan metode similarity\ndalam deteksi kesamaan dokumen akademik, khususnya untuk mendeteksi\nplagiarisme dan kemiripan teks. Salah satunya adalah penelitian oleh Pawestri dan\nSuyanto (2024) yang berjudul Analisis Perbandingan Metode Similarity untuk\nKemiripan Dokumen Bahasa Indonesia pada Deteksi Kemiripan Teks Bahasa\nIndonesia. Dalam studi ini, mereka membandingkan performa beberapa metode\nseperti Doc2Vec, Jaccard Coefficient, Cosine Similarity, dan Euclidean Distance.\nHasil penelitian menunjukkan bahwa Cosine Similarity unggul dengan akurasi\nmencapai 98%, presisi 84%, recall 95%, dan F1-score 89%, yang menandakan\nkemampuannya yang lebih tinggi dalam mendeteksi kemiripan dokumen berbahasa\nIndonesia dibandingkan metode lainnya (Pawestri & Suyanto, 2024).\nPenelitian lain oleh Ansis, Listyaningsih, dan Soetanto (2024) dalam studi\nberjudul Deteksi Plagiat Tesis Berbahasa Indonesia Menggunakan Metode Cosine\n13\nSimilarity mengevaluasi efektivitas Cosine Similarity dan Jaccard Similarity dalam\nmendeteksi kemiripan antar dokumen tesis. Hasilnya menunjukkan bahwa Cosine\nSimilarity memiliki tingkat akurasi sebesar 96,63%, jauh lebih efektif dibandingkan\nJaccard Similarity yang hanya mencapai 50,5% .\nSelanjutnya, Wadekar et al. (2021) dalam penelitian mereka berjudul\nPlagiarism Detection with Paraphrase Recognizer Using Deep Learning\nmengusulkan kerangka deteksi plagiarisme dengan kombinasi Doc2Vec, Siamese\nLSTM, dan CNN. Metode ini terdiri dari tiga lapisan utama: lapisan pra-pemrosesan\nyang menghasilkan representasi kata menggunakan Doc2Vec, lapisan pembelajaran\nyang memanfaatkan Siamese LSTM untuk pola kemiripan, serta CNN untuk deteksi\nkesamaan dokumen. Dengan akurasi mencapai 97,26%, penelitian ini menunjukkan\npotensi besar dalam mendeteksi berbagai jenis plagiarisme, termasuk parafrase.\nDalam penelitian Resta, Aditya, dan Purwiantono (2021) yang berjudul Plagiarism\nDetection in Students' Theses Using The Cosine Similarity Method, Cosine Similarity\ndan TF-IDF diterapkan untuk mendeteksi kesamaan judul dan abstrak dalam tesis\nmahasiswa. Penelitian ini menunjukkan bahwa metode Cosine Similarity efektif\ndalam mendeteksi kesamaan dokumen, menegaskan potensinya dalam evaluasi teks\nakademik dengan bantuan teknik pra-pemrosesan.\nSelain itu, Cahyono (2020) dalam penelitian Model Perbandingan Dokumen\nKarya Ilmiah Dengan Metode Fragmentasi Menggunakan Algoritma Kesamaan\nDokumen Doc2Vec mengusulkan penggabungan teknik fragmentasi dengan Doc2Vec\nuntuk meningkatkan akurasi dan efisiensi deteksi plagiarisme dalam dokumen\nakademik berbahasa Indonesia. Teknik fragmentasi memungkinkan analisis\nbagian-bagian kecil dari dokumen, sehingga memberikan hasil yang lebih optimal\ndibandingkan dengan metode Doc2Vec sekuensial.\nPenelitian oleh Setha dan Aliane (2022) dalam studi Enhancing Automatic\nPlagiarism Detection Using Doc2Vec menerapkan Doc2Vec dalam mendeteksi\nkemiripan semantik pada teks berbahasa Inggris dan Arab menggunakan korpus\nPAN dan AraPlagDet. Hasil penelitian menunjukkan bahwa model ini memiliki\nakurasi tinggi dalam mendeteksi plagiarisme dalam kedua bahasa tersebut, yang\nmenunjukkan potensi penerapannya dalam berbagai bahasa.\nTerakhir, Pratama et al. (2019) dalam penelitian Deteksi Plagiarisme pada\nArtikel Jurnal Menggunakan Metode Cosine Similarity meneliti penggunaan Cosine\nSimilarity bersama dengan teknik Grabbing Data dan PDF Extractor. Dari hasil uji\ncoba, tingkat kemiripan mencapai 13% menggunakan Cosine Similarity, dengan nilai\nrecall sebesar 8%, memberikan gambaran tentang efektivitas metode ini dalam\nkonteks kemiripan dokumen jurnal.\n14\nTable 3.1 Penelitian Terdahulu\nNo Peneliti Judul Metode Keterangan\n1 Sheraton Analisis Doc2Vec, Penelitian ini bertujuan\nPawestri, Perbandingan Jaccard untuk menilai performa\nYohanes Suyanto Metode Coefficient, algoritma Doc2Vec\n(2024) Similarity Cosine dibandingkan dengan\nSimilarity,\nuntuk metode similarity lain\nEuclidean\nKemiripan seperti Jaccard\nDistance\nDokumen Coefficient, Cosine\nBahasa Similarity, dan Euclidean\nIndonesia pada Distance dalam\nDeteksi mendeteksi kemiripan\nKemiripan antar dokumen berbahasa\nTeks Bahasa Indonesia. Hasilnya\nIndonesia adalah Cosine Similarity\nlebih unggul\ndibandingkan metode\nlainnya, dengan akurasi\n98%, presisi 84%, recall\n95%, dan F1-score 89%.\n2 Syukry Ansis, Deteksi Plagiat Cosine Penelitian ini bertujuan\nEndang Palupi Tesis Similarity dan untuk mengevaluasi\nListyaningsih, Berbahasa Jaccard efektivitas dua metode\nProf. Dr. Ir. Hari Indonesia Similarity dengan mendeteksi\nSoetanto, S.kom, Menggunakan kemiripan antara dua\n(2024) Metode Cosine dokumen tesis dengan\nSimilarity membandingkan metode\nCosine Similarity dan\nJaccard Similarity.\nHasilnya menunjukkan\nbahwa Cosine Similarity\nlebih efektif, dengan\nakurasi hasil mencapai\n96,63% dan Jaccard\nSimilarity hanya 50,5%.\n15\n3 Yogesh Plagiarism Doc2vec, Penelitian ini\nWadekar, Tushar Detection with Siamese Long mengusulkan kerangka\nShendge, Manali Paraphrase Short-Term kerja deteksi plagiarisme\nDhokale, Recognizer Memory yang memanfaatkan\nVaishnavi Ohol, Using Deep (SLSTM), dan model pembelajaran\nProf. Sagar Learning Convolutional mendalam untuk\nDhanake (2021) Neural meningkatkan efektivitas\nNetworks deteksi plagiarisme.\n(CNN) Sistem ini terdiri dari tiga\nlapisan: prapemrosesan\ndengan embedding kata,\npembelajaran, dan\ndeteksi. Dengan\npendekatan ini, sistem\nberhasil mencapai akurasi\n97,26% dalam\nmengidentifikasi\nberbagai jenis\nplagiarisme, termasuk\nyang melibatkan\npenggantian kata\nsederhana dan modifikasi\nstruktur frasa.\n16\n4 Oppi Anda Plagiarism Cosine Penelitian ini bertujuan\nResta, Addin Detection in similarity, untuk mengukur\nAditya, Febry Students' Preprocessing kesamaan judul dan\nEka Purwiantono Theses techniques,TF- abstrak dengan\n(2021) IDF (Term menghitung kesamaan\nUsing The Frequency- dokumen menggunakan\nCosine Inverse TF dan IDF untuk\nSimilarity Document mendapatkan skor Cosine\nMethod Frequency) Similarity. Hasilnya\nmenunjukkan bahwa\npenggunaan metode\nCosine Similarity,\nbersama dengan teknik\npreprocessing dan TF-\nIDF, terbukti efektif\ndalam mendeteksi\nkesamaan antara tesis\nyang diajukan dan karya-\nkarya yang sudah ada.\n5 Stefanus Model fragmentasi Penelitian ini merancang\nChristian Perbandingan dan algoritma sistem untuk mendeteksi\nCahyono (2020) Dokumen Doc2Vec plagiarisme dalam karya\nKarya Ilmiah ilmiah berbahasa\nDengan Indonesia dengan\nMetode menggunakan metode\nFragmentasi fragmentasi dan\n17\nMenggunakan algoritma Doc2Vec. Hasil\nAlgoritma penelitian menunjukkan\nKesamaan bahwa penggabungan\nDokumen model fragmentasi\nDoc2vec dengan metode Doc2Vec\nmemberikan akurasi dan\nkecepatan komputasi yang\nlebih optimal\ndibandingkan metode\nDoc2Vec sekuensial.\nModel ini mampu\nmemberikan rekomendasi\ndokumen literatur yang\nserupa dengan dokumen\nterkait.\n6 Imene Setha, Enhancing Doc2Vec, Penelitian ini\nHassina Aliane Automatic LSA, menggunakan model\n(2022) Plagiarism Word2Vec Doc2Vec untuk\nDetection mendeteksi kemiripan\nUsing semantik pada teks dalam\nDoc2Vec bahasa Inggris dan Arab\nmenggunakan korpus\nPAN dan AraPlagDet,\ndengan hasil yang\nmenunjukkan akurasi\ntinggi dalam mendeteksi\nplagiarisme dalam kedua\nbahasa tersebut.\n7 Rito Putriwana Deteksi Cosine Penelitian ini\nPratama, Plagiarisme Similarity, mengimplementasikan\nMuhammad pada Artikel Grabbing Data, sistem deteksi\nFaisal Ajib Jurnal PDF Extractor plagiarisme dengan\nHanani (2019) Menggunakan menggunakan algoritma\n18\nMetode Cosine Cosine Similarity untuk\nSimilarity membandingkan artikel\njurnal yang diunggah\ndengan dokumen yang\nada di\nrepositori. Hasilnya\nadalah berdasarkan uji\ncoba mencari nilai\nkemiripan artikel jurnal,\ndiperoleh nilai sebesar\n13% menggunakan\nmetode Cosine Similarity,\nsedangkan untuk nilai\nrecall sebesar 8%.\n2.7 Perbedaan Penelitian\nPenelitian ini menerapkan algoritma Doc2Vec sebagai teknik embedding dokumen dan metode\nCosine Similarity untuk mengukur tingkat kemiripan antar dokumen executive summary skripsi.\nBerbeda dengan penelitian Pawestri dan Suyanto (2024) yang membandingkan berbagai metode\nsimilarity pada dokumen teks secara umum, penelitian ini fokus pada deteksi kemiripan dokumen\nakademik berbahasa Indonesia dengan pendekatan embedding dokumen secara menyeluruh.\nAnsis et al. (2024) dan Resta et al. (2021) menggunakan Cosine Similarity dan TF-IDF untuk\nmendeteksi plagiarisme pada tesis dan abstrak, sedangkan penelitian ini menggabungkan\nDoc2Vec dan Cosine Similarity untuk menangkap kemiripan semantik secara lebih mendalam.\nSelain itu, penelitian ini berbeda dari Wadekar et al. (2021) yang menggunakan model deep\nlearning seperti Siamese LSTM dan CNN, dengan pendekatan yang lebih sederhana namun\nefisien menggunakan Doc2Vec. Penelitian Cahyono (2020) mengkombinasikan teknik\nfragmentasi dengan Doc2Vec, sedangkan penelitian ini menggunakan representasi embedding\npenuh dokumen untuk deteksi kemiripan secara komprehensif. Dengan demikian, penelitian ini\nmenawarkan solusi khusus yang menitikberatkan pada peningkatan efisiensi dan akurasi dalam\nmendeteksi kemiripan executive summary di Fakultas Ilmu Komputer dan Teknologi Informasi\nUniversitas Sumatera Utara.\n19\nBAB 3\nANALISIS DATA\n3.1 Data yang Digunakan\nData yang digunakan dalam penelitian ini berasal dari dokumen-dokumen skripsi yang\ndikumpulkan dari Fakultas Ilmu Komputer dan Teknologi Informasi, Universitas Sumatera Utara\n(USU). Jumlah keseluruhan data skripsi yang berhasil dihimpun sebanyak 300 dokumen, yang\nmencakup berbagai angkatan mulai dari tahun 2017 hingga 2020. Dokumen-dokumen ini\ndigunakan sebagai sumber pembanding utama dalam proses deteksi kemiripan terhadap dokumen\nexecutive summary yang diunggah oleh mahasiswa melalui sistem. Selain itu, sebanyak 50\ndokumen executive summary juga disiapkan sebagai data uji (testing data) untuk mengevaluasi\nperforma sistem.\nSeluruh dokumen yang digunakan tersedia dalam format digital, yaitu Portable Document Format\n(PDF) dan Microsoft Word Document (DOCX), yang kemudian diarsipkan dan dikelola dalam\nbasis data sistem. Pemanfaatan dokumen digital memberikan kemudahan dalam proses\npemrosesan otomatis, sekaligus memungkinkan sistem untuk melakukan pencocokan dan analisis\nsecara efisien. Data digital ini menjadi landasan penting dalam tahap ekstraksi informasi dan\npengolahan teks secara komputasional menggunakan pendekatan Natural Language Processing\n(NLP).\nSebelum digunakan dalam tahap perbandingan, setiap dokumen skripsi terlebih dahulu melalui\nserangkaian tahapan pra-pemrosesan (preprocessing) untuk menyiapkan data teks agar dapat\ndiolah oleh mesin. Proses pra-pemrosesan ini meliputi text cleaning (penghapusan karakter tidak\nrelevan seperti angka, simbol, dan tanda baca), case folding (konversi seluruh huruf menjadi huruf\nkecil), tokenization (pemecahan teks menjadi unit kata), stopword removal (penghapusan kata\numum yang tidak memiliki makna signifikan), dan lemmatization (mengubah kata ke bentuk\ndasar). Tahapan ini bertujuan untuk menyederhanakan struktur teks tanpa menghilangkan makna\nyang terkandung di dalamnya.\nSetelah proses pra-pemrosesan selesai, teks hasil pemrosesan diubah menjadi representasi vektor\nmenggunakan algoritma Doc2Vec. Algoritma ini memungkinkan setiap dokumen diwakili dalam\nbentuk vektor berdimensi tetap yang mengandung informasi semantik dan konteks dari teks\ntersebut. Representasi vektor inilah yang menjadi dasar dalam proses perbandingan kesamaan\nantar dokumen, khususnya antara dokumen skripsi dan executive summary yang diunggah\npengguna.\nData yang digunakan dalam penelitian ini tidak hanya berfungsi sebagai bahan pengujian sistem,\ntetapi juga menjadi fondasi pembentukan model deteksi kemiripan dokumen. Keragaman\n20\ndokumen skripsi dari berbagai tahun memungkinkan sistem untuk mempelajari pola bahasa, gaya\npenulisan ilmiah, serta struktur naratif yang khas dalam penulisan akademik. Dengan demikian,\nsistem yang dibangun diharapkan mampu memberikan hasil deteksi kemiripan yang lebih akurat,\nobjektif, dan dapat diandalkan dalam mendeteksi indikasi plagiarisme atau kesamaan konten\nsecara menyeluruh.\nBerikut ini adalah contoh data skripsi yang digunakan:\nTabel 3.1 Contoh Data Skripsi yang Digunakan\nNo Judul Skripsi Kutipan Isi Skripsi\nSistem Rekomendasi Film\nSistem ini dirancang untuk memberikan rekomendasi\n1 Menggunakan Metode Collaborative\nfilm berdasarkan riwayat rating pengguna.\nFiltering\nAnalisis Sentimen Review Produk Penelitian ini bertujuan mengklasifikasikan sentimen\n2\nMenggunakan Naive Bayes konsumen dari review produk online.\nDeteksi Hoaks Berita Online dengan Sistem dikembangkan untuk membedakan berita\n3\nMetode SVM hoaks dan valid melalui fitur teks berita.\nKlasifikasi Jenis Tanaman Obat Pengolahan citra daun dilakukan untuk mengenali\n4\ndengan CNN jenis tanaman obat berbasis deep learning.\nModel LSTM digunakan untuk memprediksi suhu,\nSistem Prediksi Cuaca\n5 kelembaban, dan kondisi cuaca berdasarkan data\nMenggunakan LSTM\nhistoris.\nBerikut ini adalah contoh data executive summary yang digunakan:\nTabel 3.2 Contoh Data Executive Summary yang Digunakan\nNo Judul Executive Summary Kutipan Isi Executive Summary\nPerancangan Aplikasi Rekomendasi Penelitian ini membuat sistem rekomendasi buku sesuai\n1\nBuku minat pembaca menggunakan machine learning.\nKlasifikasi Ulasan E-Commerce Sistem ini mengelompokkan review produk ke dalam\n2\ndengan Naive Bayes kategori positif dan negatif.\nSistem Identifikasi Berita Palsu di Ditekankan pada pentingnya klasifikasi teks untuk\n3\nMedia Sosial mengenali berita palsu atau tidak.\nDeteksi Jenis Daun Herbal dengan Model CNN digunakan untuk klasifikasi jenis daun\n4\nDeep Learning herbal berdasarkan fitur visual.\nPrediksi Cuaca Harian dengan Digunakan data historis sebagai input untuk\n5\nModel Recurrent Neural Network memprediksi kondisi cuaca secara otomatis.\n21\n3.2 Arsitektur Umum\nArsitektur umum pada penelitian ini digunakan untuk menggambarkan sistem\nyang akan dibuat secara keseluruhan. Dibawah ini merupakan perancangan sistem yang\nmeliputi setiap tahapan pembuatan sistem.\nGambar 3.1 Arsitektur Umum\nPenjelasan terkait arsitektur umum pada Gambar 3.1 adalah sebagai berikut:\n1. Pengumpulan Data (Data Acquisition)\nData skripsi dikumpulkan dari Fakultas Ilmu Komputer dan Teknologi Informasi,\nUniversitas Sumatera Utara (USU). Dokumen-dokumen skripsi ini digunakan\nsebagai data utama untuk dibandingkan dengan executive summary yang diunggah\noleh mahasiswa. Tahap ini penting karena skripsi menjadi dasar untuk perbandingan\nkesamaan dokumen.\n2. Pra-Pemrosesan Data (Data Preprocessing – Document Skripsi)\nSetelah data skripsi terkumpul, langkah berikutnya adalah mempersiapkan data untuk\ndiproses. Tahapan-tahapan preprocessing meliputi:\n1. Text Cleaning: Menghapus elemen-elemen yang tidak relevan seperti simbol\ndan tanda baca yang tidak diperlukan.Tokenization: Memecah teks menjadi\nunit-unit kecil (token), seperti kata atau frasa.\nTabel 3.3 Text Cleaning\nTeks Sebelum Teks Sesudah\n22\n\"Judul: Sistem Deteksi #2023!\" \"Judul Sistem Deteksi\"\n\"Skripsi ini dibuat oleh @warida.\" \"Skripsi ini dibuat oleh warida\"\n\"Penerapan---Sistem??\" \"Penerapan Sistem\"\n2. Case Folding: Mengubah seluruh teks menjadi huruf kecil untuk memastikan bahwa kata\nyang sama dengan kapitalisasi berbeda dianggap serupa.\nTabel 3.4 Case Folding\nTeks Sebelum Teks Sesudah\n\"Dokumen Ini Akan Diproses\" \"dokumen ini akan diproses\"\n\"PENERAPAN sistem\" \"penerapan sistem\"\n\"SimILarItY DeTecTion\" \"similarity detection\"\n3. Tokenization: Memecah teks menjadi unit-unit kecil (token), seperti kata atau\nfrasa.\nTabel 3.5 Tokenization\nTeks Sebelum Hasil Tokenisasi\n\"sistem deteksi kemiripan dokumen\" [\"sistem\", \"deteksi\", \"kemiripan\", \"dokumen\"]\n\"mahasiswa mengunggah file exum\" [\"mahasiswa\", \"mengunggah\", \"file\", \"exum\"]\n\"hasil similarity ditampilkan dalam [\"hasil\", \"similarity\", \"ditampilkan\", \"dalam\",\ntabel\" \"tabel\"]\n4. Lemmatization: Mengubah kata-kata menjadi bentuk dasarnya.\nTabel 3.7 Lemmatization\nTeks Sebelum Setelah Lemmatization\n\"pengguna mengunggah dokumen\" \"pengguna unggah dokumen\"\n\"sistem melakukan pengecekan\" \"sistem lakukan cek\"\n\"dokumen-dokumen dibandingkan dengan basis data\" \"dokumen banding basis data\"\n5. Stop Words Removal: Menghapus kata-kata umum yang tidak memberikan banyak\nmakna dalam analisis teks.\nTabel 3.6 Stopword Removal\nTeks Sebelum Sesudah Stopword Removal\n\"dokumen yang diunggah oleh mahasiswa\" \"dokumen diunggah mahasiswa\"\n\"sistem untuk mendeteksi tingkat kemiripan\" \"sistem mendeteksi tingkat kemiripan\"\n\"hasil dari sistem ini ditampilkan dalam tabel\" \"hasil sistem ditampilkan tabel\"\n6. Embedding Text (Text Embedding)\nSetelah dokumen skripsi melewati tahap preprocessing, dokumen tersebut diubah menjadi\nrepresentasi vektor menggunakan model Doc2Vec. Doc2Vec menghasilkan embedding teks,\nyaitu representasi numerik dari dokumen, yang mampu menangkap informasi semantik dan\nkonteks dari dokumen tersebut. Embedding ini kemudian digunakan dalam proses\n23\nperbandingan dengan dokumen executive summary.\n7. Menyimpan Vektor ke database (Store Vectors in Database)\nHasil embedding dari dokumen skripsi disimpan dalam database. Database ini akan\ndigunakan sebagai referensi dalam proses perbandingan dengan dokumen executive\nsummary yang diunggah oleh pengguna.\n8. Unggah Dokumen (Document Upload)\nMahasiswa mengunggah executive summary mereka melalui sistem. Setelah\ndiunggah, dokumen ini akan diproses dan dibandingkan dengan dokumen skripsi\nyang sudah ada di database.\n9. Pra-Pemrosesan Executive Summary (Data Preprocessing - Executive Summary)\nSama seperti dokumen skripsi, executive summary juga melalui tahapan\npreprocessing yang serupa:\n1. Text Cleaning: Menghapus elemen-elemen yang tidak relevan seperti simbol dan\ntanda baca yang tidak diperlukan.\n2. Case Folding: Mengubah seluruh teks menjadi huruf kecil untuk memastikan bahwa kata\nyang sama dengan kapitalisasi berbeda dianggap serupa.\n3. Tokenization: Memecah teks menjadi unit-unit kecil (token), seperti kata atau\nfrasa.\n4. Lemmatization: Mengubah kata-kata menjadi bentuk dasarnya.\n5. Stop Words Removal: Menghapus kata-kata umum yang tidak memberikan\nbanyak makna dalam analisis teks.\n10. Text Embedding (Executive Summary)\nSetelah dokumen executive summary diproses, dokumen ini juga diubah menjadi\nrepresentasi vektor menggunakan model Doc2Vec. Proses embedding ini\nmenghasilkan vektor yang menyimpan makna semantik dari dokumen executive\nsummary tersebut. Representasi vektor ini nantinya digunakan untuk dibandingkan\ndengan vektor skripsi yang sudah disimpan dalam basis data.\n11. Perbandingan Vektor (Compare Vectors)\nVektor dari executive summary yang diunggah dibandingkan dengan vektor dokumen skripsi\nyang telah disimpan di database menggunakan metode Cosine Similarity. Cosine Similarity\nmenghitung sudut antara dua vektor di ruang multidimensi untuk menentukan tingkat\nkemiripan antar dokumen. Semakin kecil sudutnya, semakin besar kesamaan antara dua\ndokumen tersebut.\n12. Deteksi Kesamaan dan Perhitungan Skor (Similarity Detection and Score\nCalculation)\nSetelah mendapatkan embedding dari kedua dokumen (skripsi dan executive\nsummary), sistem akan melakukan deteksi kesamaan menggunakan metrik Cosine\n24\nSimilarity untuk menghitung kedekatan antara dua vektor. Proses ini menghasilkan\nskor kesamaan, yang menunjukkan tingkat kemiripan antara executive summary yang\ndiunggah dan dokumen-dokumen skripsi yang ada di database.\n13. Tabel Kesamaan (Similarity Table)\nHasil deteksi kesamaan akan disajikan dalam bentuk tabel yang menampilkan:\n1. Judul Skripsi: Judul skripsi yang dibandingkan.\n2. Skor Kesamaan: Tingkat kesamaan antara executive summary dan skripsi.\n3. Aksi (Actions): Pengguna dapat melihat dokumen yang lebih mirip, dengan\nbagian-bagian relevan yang di-highlight untuk memudahkan identifikasi\nkesamaan.\n14. Evaluasi Sistem (System Evaluation)\nTahap ini bertujuan untuk mengukur tingkat akurasi dan efektivitas sistem dalam mendeteksi\nkesamaan antar dokumen, khususnya antara executive summary dan skripsi yang telah disimpan\ndalam database. Evaluasi dilakukan berdasarkan matrix evaluation, yaitu metode evaluasi berbasis\nConfusion Matrix dan turunannya: Accuracy, Precision, Recall, dan F1-Score.\n3.3 Diagram Activity\nActivity diagram ini menggambarkan alur proses utama dalam sistem deteksi kemiripan\ndokumen skripsi yang melibatkan tiga entitas utama, yaitu pengguna (user), sistem, dan\nadmin. Diagram ini dimulai ketika pengguna mengakses halaman unggah executive\nsummary pada sistem. Pada halaman ini, sistem akan menampilkan form dan instruksi untuk\nmengunggah file yang akan dianalisis. File yang diunggah oleh pengguna harus berupa file\ndalam format .zip yang berisi dokumen executive summary dalam bentuk PDF. Setelah\nproses unggah berhasil, sistem akan melakukan validasi awal terhadap file tersebut.\nJika file yang diunggah valid, maka sistem akan memproses dokumen melalui beberapa\ntahapan prapemrosesan teks, seperti pembersihan teks (cleaning), case folding, tokenisasi,\nstopword removal, dan lemmatization. Setelah itu, dokumen executive summary yang telah\ndiproses akan diubah menjadi representasi vektor menggunakan model Doc2Vec. Vektor ini\nkemudian dibandingkan dengan kumpulan vektor dokumen skripsi yang telah disimpan\ndalam basis data menggunakan metode Cosine Similarity.\nHasil perbandingan ini akan menghasilkan skor kesamaan (similarity score) antara\ndokumen yang diunggah dengan dokumen skripsi di dalam basis data. Sistem kemudian akan\nmenampilkan tabel hasil kesamaan kepada pengguna, yang memuat informasi seperti judul\nskripsi, tingkat kesamaan (dalam bentuk persentase atau skor), serta opsi untuk melihat detail\ndokumen pembanding. Jika file tidak valid, sistem akan menampilkan pesan kesalahan dan\npengguna diminta untuk mengunggah ulang file yang sesuai.\n25\nSementara itu, admin memiliki peran untuk mengelola basis data dokumen skripsi yang\ndigunakan sebagai referensi dalam proses analisis. Admin dapat melakukan login ke dalam\nsistem dan mengunggah kumpulan dokumen skripsi dari berbagai angkatan ke dalam basis\ndata. Dokumen-dokumen ini akan diproses oleh sistem dan diubah menjadi vektor dengan\nmodel Doc2Vec, untuk kemudian digunakan dalam proses pencocokan. Admin juga\nmemiliki akses untuk melihat hasil analisis yang dilakukan oleh pengguna melalui dashboard\nsistem.\nDengan adanya activity diagram ini, diharapkan pemahaman terhadap alur kerja sistem\nmenjadi lebih jelas, terutama dalam menunjukkan bagaimana pengguna dan admin\nberinteraksi dengan sistem serta bagaimana sistem merespons dan memproses setiap input\nyang diterima.\n26\nGambar 3.3. Activity Diagram\n3.4 Perancangan Antarmuka Sistem\nPada bagian ini dijelaskan rancangan antarmuka sistem yang dikembangkan untuk mendeteksi\nkemiripan dokumen skripsi berbasis web. Rancangan ini mencerminkan struktur tampilan yang\nakan diimplementasikan dalam sistem, baik untuk pengguna umum (user) maupun admin.\nTujuannya adalah memberikan gambaran yang jelas tentang alur interaksi antara pengguna dan\n27\nsistem serta menjadi acuan dalam proses pengembangan antarmuka.\n3.4.1 Halaman Login\nHalaman login merupakan gerbang awal bagi pengguna untuk masuk ke dalam sistem.\nPengguna perlu memasukkan username dan password untuk mendapatkan akses ke fitur\nyang tersedia. Jika kredensial yang dimasukkan tidak valid, sistem akan menampilkan\nnotifikasi kesalahan.\nKomponen pada halaman ini mencakup logo institusi di bagian atas, kolom input untuk\nusername dan password, tombol login, serta tautan menuju halaman register bagi\npengguna yang belum memiliki akun.\n3.4.2 Halaman Register\nHalaman register memungkinkan pengguna baru untuk membuat akun. Admin tidak dapat\nmelakukan registrasi melalui halaman ini karena akun admin hanya dapat dibuat oleh sistem\nsecara langsung. Halaman ini terdiri dari logo sistem, kolom input untuk username dan password,\npilihan role User, tombol register, serta tautan kembali ke halaman login.\n28\n3.4.3 Halaman Dashboard (Admin)\nSetelah berhasil login, admin diarahkan ke halaman dashboard yang berisi informasi sambutan\ndan navigasi sistem. Menu navigasi terletak di sebelah kiri dan terdiri atas Dashboard, Upload\nDokumen, dan Riwayat Dokumen. Di bagian kanan layar ditampilkan identitas pengguna yang\nsedang login beserta tombol logout.\n3.4.4 Halaman Upload Dokumen (Admin)\nHalaman ini memungkinkan admin untuk mengunggah dokumen skripsi ke dalam database\nsistem. Form upload terdiri atas kolom input untuk judul dokumen, tombol untuk memilih file\nberformat PDF, serta tombol untuk mengunggah dokumen tersebut ke sistem.\n29\n3.4.5 Halaman Daftar Dokumen (Admin)\nHalaman daftar dokumen menampilkan seluruh dokumen skripsi yang telah diunggah oleh admin.\nInformasi yang ditampilkan meliputi nomor urut, judul dokumen, nama file, isi dokumen, dan\nwaktu unggah. Data ini ditampilkan dalam bentuk tabel yang dapat diakses melalui menu\nnavigasi.\n3.4.6 Halaman Dashboard (User)\nPengguna umum (user) setelah login akan diarahkan ke dashboard yang menampilkan ucapan\nselamat datang dan identitas pengguna. Menu navigasi tersedia di sisi kiri halaman, yang terdiri\n30\ndari menu Dashboard, Upload Dokumen, dan Riwayat Dokumen. Halaman ini juga menyediakan\ntombol logout.\n3.4.7 Halaman Upload File untuk Cek Similarity\nHalaman ini digunakan oleh user untuk mengunggah file yang ingin dicek kemiripannya dengan\ndokumen-dokumen skripsi yang tersedia di database. Halaman ini terdiri dari tombol pemilihan\nfile dan tombol untuk memulai proses pengecekan similarity. File yang dapat diunggah adalah\nfile berformat PDF.\n31\n3.4.8 Halaman Hasil Similaritas\nSetelah sistem selesai melakukan perbandingan dokumen, hasil similarity ditampilkan dalam\nbentuk tabel. Informasi yang disajikan mencakup nomor, judul skripsi yang memiliki kemiripan,\nskor kesamaan dalam bentuk persentase, serta tombol untuk melihat dokumen hasil similarity\ndalam format PDF.\n3.4.9 Halaman Riwayat Dokumen\nHalaman riwayat menampilkan seluruh dokumen yang pernah diunggah oleh pengguna beserta\nhasil perbandingan similarity-nya. Informasi yang ditampilkan mencakup nomor urut, judul\ndokumen, skor similarity, kata yang relevan, waktu unggah, serta tombol untuk melihat dokumen\nhasil similarity.\n32\n33\nBAB 4\nIMPLEMENTASI DAN PENGUJIAN SISTEM\n4.1 Implementasi Sistem\nImplementasi sistem deteksi kemiripan dokumen skripsi berbasis web ini dilakukan\ndengan menggunakan perangkat keras dan perangkat lunak yang mendukung proses\npengembangan dan pengujian sistem secara optimal. Sistem dibangun dengan menggunakan\nbahasa pemrograman Python dan framework Flask untuk sisi backend, serta HTML, CSS, dan\nJavaScript untuk sisi frontend. Proses pengolahan dokumen dan perhitungan kemiripan dilakukan\ndengan bantuan pustaka NLP seperti Sastrawi dan Gensim. Untuk manajemen basis data\ndigunakan PostgreSQL.\n4.1.1 Spesifikasi Perangkat Keras\nPerangkat keras yang digunakan dalam pengembangan dan implementasi sistem adalah sebagai\nberikut:\n1. Perangkat: Laptop HP 245 G8 Notebook PC\n2. Prosesor: AMD Ryzen 3 5300U with Radeon Graphics, 2.60 GHz\n3. RAM: 8 GB\n4. Sistem Operasi: Windows 11 Home Single Language 64-bit\n4.1.2 Spesifikasi Perangkat Lunak\nPerangkat lunak yang digunakan dalam pengembangan sistem ini terdiri dari beberapa tools dan\nlibrary pendukung, yaitu:\n1. Bahasa Pemrograman: Python 3.10.9\n2. Framework Backend: Flask 3.1\n3. Library NLP: Sastrawi, Gensim (Doc2Vec), re, spacy\n4. Library Ekstraksi Teks: PyPDF2, pdfplumber, python-docx\n5. Library Tambahan: psycopg2, werkzeug.security, functools\n6. Frontend: HTML5, CSS3, JavaScript, Jinja2\n7. Tools Pengembangan: Visual Studio Code\n8. Database: PostgreSQL\n4.2 Implementasi Data\nData yang digunakan pada penelitian ini terdiri dari kumpulan dokumen Executive Summary\n(Exum) dan dokumen Skripsi yang berjumlah total sebanyak 70 dokumen. Data tersebut\ndigunakan dalam proses pelatihan model serta sebagai data pembanding untuk mengukur tingkat\nkemiripan terhadap dokumen yang diunggah oleh pengguna.\nData yang digunakan dalam sistem telah melewati proses pre-processing untuk meningkatkan\nkualitas teks. Tahapan ini bertujuan agar representasi data menjadi lebih bersih dan relevan,\nsehingga performa dan akurasi model Doc2Vec dalam mendeteksi kemiripan dokumen menjadi\nlebih optimal.\n34\n4.3 Implementasi Model\nImplementasi model dilakukan untuk menghasilkan representasi numerik (embedding) dari setiap\ndokumen, sehingga proses perbandingan kemiripan dapat dilakukan secara efisien menggunakan\nCosine Similarity.\nModel dibangun menggunakan algoritma Doc2Vec dari pustaka Gensim, yang\ndiimplementasikan secara lokal menggunakan Visual Studio Code (VS Code) sebagai lingkungan\npengembangan terintegrasi (IDE). Sistem ini dikembangkan dengan pendekatan berbasis Python\ndan framework Flask, serta terhubung ke basis data PostgreSQL.\nSebelum proses pelatihan dimulai, seluruh dokumen skripsi melalui serangkaian tahapan pra-\npemrosesan (preprocessing) yang mencakup:\n Pembersihan teks (text cleaning),\n Case folding,\n Tokenisasi,\n Penghapusan stopword,\n Lemmatization.\nTahapan ini bertujuan menyederhanakan struktur teks agar dapat diproses secara optimal oleh\nmodel. Proses pra-pemrosesan dilakukan menggunakan library seperti Sastrawi, re, dan spaCy.\nDokumen yang telah diproses kemudian diubah menjadi vektor berdimensi tetap dengan\nDoc2Vec. Adapun konfigurasi hyperparameter yang digunakan pada proses pelatihan ditampilkan\npada tabel berikut:\nTabel 4.1 Konfigurasi Hyperparameter Doc2Vec\nParameter Nilai\nvector_size 50\nwindow 10\nepochs 20\nmin_count 1\nworkers 4\ndm (Distributed Memory) 1\nSetelah proses pelatihan selesai, model disimpan dalam file berformat .model, yang kemudian\ndigunakan dalam proses inferensi untuk membandingkan dokumen executive summary dengan\ndokumen skripsi di basis data menggunakan Cosine Similarity.\nModel hanya perlu dilatih satu kali di awal pengembangan sistem. Jika terdapat penambahan\ndokumen skripsi baru, pelatihan dapat dijalankan ulang untuk memperbarui representasi vektor\nyang tersimpan di basis data.\nPenggunaan Doc2Vec dipilih karena algoritma ini mampu menangkap makna semantik dan\nkonteks dari seluruh dokumen, berbeda dengan metode tradisional seperti TF-IDF yang hanya\n35\nmemperhatikan frekuensi kata. Dengan demikian, sistem dapat mendeteksi kesamaan makna antar\ndokumen meskipun tidak memiliki kata-kata yang sama secara eksplisit.\nSecara keseluruhan, proses implementasi model ini menjadi tulang punggung utama dalam sistem\ndeteksi kemiripan dokumen berbasis teks yang dikembangkan.\nSelain menggunakan konfigurasi default pada Doc2Vec, dilakukan pula beberapa skenario\npelatihan untuk mengeksplorasi pengaruh hyperparameter terhadap performa model. Tujuannya\nadalah untuk memperoleh akurasi dan nilai loss terbaik sebelum model digunakan dalam sistem.\nHasil beberapa skenario pelatihan ditunjukkan pada tabel berikut:\nTabel 4.2 Skenario Pelatihan Model\nEpoch Batch Size Learning Rate Accuracy Loss\n10 16 0.0001 0.9333 0.2708\n10 32 0.0001 0.9333 0.3510\n25 16 0.00001 0.8937 0.4380\n25 32 0.00001 0.8153 0.6285\n50 16 0.00001 0.9556 0.2571\n50 16 0.000001 0.7556 0.7606\n50 32 0.00001 0.8778 0.4121\n50 32 0.000001 0.6889 0.8612\nBerdasarkan hasil eksperimen tersebut, kombinasi parameter terbaik diperoleh pada epoch = 50,\nbatch size = 16, dan learning rate = 0.00001 dengan akurasi sebesar 95.56% dan nilai loss sebesar\n0.2571. Konfigurasi ini digunakan sebagai konfigurasi akhir dalam pelatihan model yang\nditerapkan pada sistem. Peningkatan jumlah epoch dan pemilihan batch size yang sesuai terbukti\nmemberikan dampak signifikan terhadap akurasi akhir.\n4.4 Testing model\n4.5. Pengujian Sistem\n4.6 Implementasi Antarmuka Aplikasi\nImplementasi antarmuka aplikasi merupakan tahap realisasi dari desain UI/UX yang telah\ndirancang sebelumnya menjadi tampilan fungsional yang dapat digunakan secara langsung oleh\npengguna. Proses implementasi dilakukan menggunakan kombinasi teknologi web seperti\nHTML5, CSS3, JavaScript, serta templating engine Jinja2 dari framework Flask. Seluruh\ntampilan antarmuka dirancang responsif agar dapat digunakan dengan baik pada perangkat\ndesktop maupun mobile.\nBerikut adalah hasil implementasi dari setiap halaman utama dalam aplikasi sistem deteksi\nkemiripan dokumen:\n36\n1. Halaman Login\nHalaman login berfungsi sebagai gerbang awal bagi pengguna untuk mengakses sistem. Pengguna\ndiminta memasukkan username dan password yang sesuai. Apabila kredensial tidak valid, sistem\nakan menampilkan notifikasi kesalahan. Tampilan halaman ini didesain sederhana dan\nprofesional, dengan menyertakan logo institusi di bagian atas sebagai identitas sistem.\n2. Halaman Register\nHalaman ini digunakan oleh pengguna baru untuk membuat akun. Formulir registrasi mencakup\nkolom username dan password, serta pilihan role yang secara default diatur sebagai \"User\".\nValidasi input diterapkan untuk memastikan data yang dimasukkan benar sebelum dikirim ke\nserver.\n3. Dashboard Admin\nSetelah berhasil login, admin diarahkan ke halaman dashboard yang berfungsi sebagai pusat\nnavigasi. Di sisi kiri halaman terdapat menu navigasi seperti Dashboard, Upload Dokumen, dan\n37\nRiwayat Dokumen. Di sisi kanan ditampilkan informasi sambutan dan identitas admin yang\nsedang login.\n4. Halaman Upload Dokumen (Admin)\nHalaman ini memungkinkan admin untuk mengunggah dokumen skripsi ke dalam sistem. Admin\ndapat mengisi judul dokumen, memilih file dalam format PDF, lalu mengunggah dokumen\ntersebut. Setelah berhasil diunggah, sistem akan secara otomatis menyimpan dokumen ke dalam\nbasis data dan menampilkannya pada daftar dokumen.\n5. Halaman Daftar Dokumen (Admin)\nHalaman ini menampilkan seluruh dokumen skripsi yang telah diunggah ke dalam sistem.\nInformasi yang ditampilkan berupa nomor urut, judul dokumen, nama file, isi ringkas dokumen,\ndan waktu unggah. Tampilan data disajikan dalam bentuk tabel agar mudah dibaca dan dikelola.\n38\n6. Dashboard User\nPengguna umum (user) juga diarahkan ke dashboard setelah login. Tampilan halaman ini\nmenampilkan informasi sambutan serta menu navigasi yang terdiri dari Dashboard, Upload\nDokumen, dan Riwayat Dokumen. User juga dapat melihat identitas akunnya dan keluar dari\nsistem melalui tombol logout.\n7. Halaman Upload Dokumen (User)\nHalaman ini memungkinkan user untuk mengunggah dokumen executive summary (Exum) yang\nakan diperiksa tingkat kemiripannya dengan dokumen-dokumen skripsi yang ada di basis data.\n39\nSetelah file PDF diunggah, sistem akan secara otomatis memproses dokumen tersebut dan\nmenampilkan hasil perbandingan similarity.\n8. Halaman Hasil Similarity\nSetelah proses analisis selesai, hasil similarity ditampilkan dalam bentuk tabel. Tabel tersebut\nmemuat informasi berupa nomor, judul dokumen skripsi yang memiliki kemiripan tertinggi, skor\nkemiripan dalam bentuk persentase, serta tombol aksi untuk melihat dokumen yang relevan secara\nlebih rinci.\n40\n9. Halaman Riwayat Dokumen\nHalaman ini berisi daftar dokumen yang pernah diunggah oleh user, lengkap dengan hasil\nperbandingan similarity. Informasi yang ditampilkan meliputi nomor, judul dokumen, skor\nsimilarity, kata-kata yang dianggap relevan, tanggal unggah, dan opsi untuk melihat detail hasil\nanalisis.\n41\nDAFTAR PUSTAKA\nCahyono, S. C. (2019). Model Perbandingan Dokumen Karya Menggunakan Algoritma\nKesamaan Dokumen Doc2vec. 75117018.\nDalianis, H. (2018). Evaluation Metrics and Evaluation. 1967, 45–53.\nJurafsky, D., & Martin, J. H. (2024). Speech and Language Processing An Introduction to\nNatural Language Processing, Computational Linguistics, and Speech Recognition with\nLanguage Models Third Edition draft Summary of Contents.\nLe, Q., Mikolov, T., & Com, T. G. (2014). Distributed Representations of Sentences and\nDocuments. 32.\nMalte Ostendroff, Terry Ruas, Till Blume, Bela Gipp, G. R. (2020). Aspect-based Document\nSimilarity for Research Papers. COLING 2020 - 28th International Conference on\nComputational Linguistics, Proceedings of the Conference, October, 6194–6206.\nhttps://doi.org/10.18653/v1/2020.coling-main.545\nMustariani. (2023). Pengaruh Teknologi Terhadap Perkembangan Pendidikan Siswa di Era\nDigital.\nOppi Anda Resta, Addin Aditya, F. E. P. (2021). Plagiarism Detection in Students’ Theses\nUsing The Cosine Similarity Method. SinkrOn, 5(2), 305–313.\nhttps://doi.org/10.33395/sinkron.v5i2.10909\nPawestri, S., & Suyanto, Y. (2024). Analisis Perbandingan Metode Similarity untuk Kemiripan\nDokumen Bahasa Indonesia pada Deteksi Kemiripan Teks Bahasa Indonesia. Jurnal\nMedia Informatika Budidarma, 8, 1440–1450. https://doi.org/10.30865/mib.v8i3.7648\nPratama, R. P., Faisal, M., & Hanani, A. (2019). Deteksi Plagiarisme pada Dokumen Jurnal\nMenggunakan Metode Cosine Similarity. SMARTICS Journal, 5(1), 22–26.\nhttps://doi.org/10.21067/smartics.v5i1.2848\nRamadhanti, N. R. S. M. (2019). Document Similarity Detection Using Indonesian Language\nWord2vec Model. 1–6.\nSetha Imene, & Hassina Aliane. (2022). Enhancing automatic plagiarism detection: Using\nDoc2vec model. ICAASE 2022 - 5th Edition of the International Conference on Advanced\nAspects of Software Engineering, Proceedings, 2024.\nhttps://doi.org/10.1109/ICAASE56196.2022.9931542\nSutrisno, E., Rochmatika, E., Mahyuni, E. T., Soetijono, I. K., Mayasari, E., Widodo, M. L., &\nYuniarti, E. (n.d.). Plagiarisme Dan Integritas Akademik.\nSyukry Ansis, Endang Palupi Listyaningsih, Prof. Dr. Ir. Hari Soetanto, S.kom, M. S. (2024).\nDeteksi Plagiat Tesis Berbahasa Indonesia Menggunakan Metode Cosine Similarity.\nINOVTEK Polbeng - Seri Informatika, 9(1), 153–167.\nhttps://doi.org/10.35314/isi.v9i1.4003\nWahyuni, R. T., Prastiyanto, D., & Supraptono, E. (2017). Penerapan Algoritma Cosine\nSimilarity dan Pembobotan TF-IDF pada Sistem Klasifikasi Dokumen Skripsi. Jurnal\nTeknik Elektro Universitas Negeri Semarang, 9(1), 18–23.\nhttps://journal.unnes.ac.id/nju/index.php/jte/article/download/10955/6659\nWibowo, A. (2012). Preventing and Solving Plagiarism in Educational Institutions. Jurnal\nKesehatan Masyarakat Nasional, 6(5), 195–200.\nYogesh Wadekar, Tushar Shendge, Manali Dhokale, Vaishnavi Ohol, P. S. D. (2021).\nPlagiarism Detection with Paraphrase Recognizer Using Deep Learning. International\nJournal of Advanced Research in Science, Communication and Technology (IJARSCT),\n6(1), 1046–1053. https://doi.org/10.48175/568",
  "similar_tokens": [
    "identitas",
    "css",
    "sistematis",
    "m",
    "web",
    "negatif",
    "input",
    "reputasi",
    "terap",
    "mahasiswa",
    "algoritma",
    "tekan",
    "science",
    "bahasa",
    "peran",
    "skripsi",
    "temu",
    "c",
    "integrasi",
    "agam",
    "milik",
    "paham",
    "networks",
    "journal",
    "kelompok",
    "lanjut",
    "menitikberatkan",
    "main",
    "performa",
    "perhati",
    "spesifikasi",
    "similarity",
    "for",
    "objektif",
    "tenaga",
    "teknis",
    "students",
    "communication",
    "sisi",
    "fundamental",
    "jalan",
    "engine",
    "hubung",
    "nyata",
    "distance",
    "akibat",
    "t",
    "analis",
    "era",
    "representasi",
    "coba",
    "otomatis",
    "berita",
    "model",
    "minimal",
    "rate",
    "intelligence",
    "j",
    "lingkung",
    "nd",
    "kali",
    "ucap",
    "default",
    "judul",
    "andal",
    "identifikasi",
    "case",
    "hindar",
    "pemrograman",
    "ilmiah",
    "siswa",
    "library",
    "python",
    "siap",
    "cakup",
    "pecah",
    "gabung",
    "rusak",
    "international",
    "penuh",
    "karya",
    "portable",
    "landas",
    "positif",
    "mobile",
    "beda",
    "engineering",
    "total",
    "manual",
    "solusi",
    "tanda",
    "fisik",
    "modern",
    "sumatera",
    "pilih",
    "prof",
    "bahan",
    "simpan",
    "skenario",
    "luas",
    "indonesia",
    "vs",
    "atas",
    "khusus",
    "evaluation",
    "contoh",
    "password",
    "a",
    "butuh",
    "harap",
    "oleh",
    "angkat",
    "on",
    "bawa",
    "hambat",
    "tetap",
    "cek",
    "e",
    "file",
    "manusia",
    "conference",
    "research",
    "konversi",
    "fungsi",
    "matrix",
    "testing",
    "analisis",
    "et",
    "language",
    "akurasi",
    "implementasi",
    "tinggi",
    "proceedings",
    "bukti",
    "an",
    "konten",
    "ghz",
    "prediksi",
    "bela",
    "angka",
    "respons",
    "asal",
    "turun",
    "selesai",
    "kelola",
    "konfigurasi",
    "sedia",
    "th",
    "skor",
    "kepala",
    "tuju",
    "sama",
    "the",
    "efektif",
    "latar",
    "login",
    "admin",
    "terang",
    "alur",
    "logo",
    "rekomendasi",
    "kandung",
    "accuracy",
    "dasar",
    "tahan",
    "sensitivitas",
    "ancang",
    "mudah",
    "hadap",
    "matriks",
    "teks",
    "rumus",
    "cipta",
    "re",
    "h",
    "validasi",
    "riwayat",
    "bab",
    "ringkas",
    "kolom",
    "with",
    "database",
    "nomor",
    "jenis",
    "muhammad",
    "tawar",
    "system",
    "hidup",
    "aju",
    "martin",
    "gagal",
    "single",
    "daftar",
    "tabel",
    "cabang",
    "lunak",
    "teliti",
    "navigasi",
    "informasi",
    "flask",
    "logout",
    "g",
    "nasional",
    "text",
    "wahyuni",
    "using",
    "pratama",
    "simbol",
    "responsif",
    "tampil",
    "lapor",
    "method",
    "relevan",
    "ukur",
    "institusi",
    "laku",
    "dosen",
    "d",
    "bisnis",
    "anggap",
    "bit",
    "evaluasi",
    "kece",
    "kembang",
    "ilustrasi",
    "fasilitas",
    "efektivitas",
    "buat",
    "literatur",
    "x",
    "framework",
    "ubah",
    "komputasi",
    "dokumen",
    "dekat",
    "sulit",
    "metrik",
    "komunikasi",
    "tombol",
    "abstrak",
    "capai",
    "beban",
    "javascript",
    "dashboard",
    "subjektif",
    "score",
    "acu",
    "memory",
    "ambil",
    "metode",
    "bersih",
    "halaman",
    "batas",
    "profesional",
    "nilai",
    "orang",
    "tanggal",
    "papar",
    "nama",
    "cari",
    "sistematika",
    "arsip",
    "mesin",
    "tanggung",
    "elemen",
    "operasi",
    "and",
    "aku",
    "tulis",
    "guna",
    "tahap",
    "masyarakat",
    "hasil",
    "orientasi",
    "i",
    "cepat",
    "periksa",
    "utara",
    "lengkap",
    "gb",
    "risiko",
    "p",
    "distributed",
    "referensi",
    "studio",
    "akun",
    "to",
    "tugas",
    "usu",
    "menu",
    "u",
    "normalisasi",
    "fakultas",
    "calculation",
    "register",
    "solving",
    "data",
    "urut",
    "keras",
    "usul",
    "informatika",
    "dampak",
    "pusat",
    "kait",
    "lokal",
    "efisiensi",
    "lembaga",
    "teknologi",
    "kategori",
    "role",
    "kualitas",
    "kompleks",
    "nali",
    "cocok",
    "baru",
    "minat",
    "f",
    "meta",
    "modifikasi",
    "proses",
    "digital",
    "obat",
    "al",
    "kerja",
    "standar",
    "dalam",
    "machine",
    "dunia",
    "bobot",
    "atur",
    "universitas",
    "banding",
    "akurat",
    "salin",
    "produk",
    "topik",
    "saji",
    "saran",
    "bawah",
    "notifikasi",
    "libat",
    "integritas",
    "teori",
    "activity",
    "salah",
    "code",
    "kirim",
    "percaya",
    "sederhana",
    "alami",
    "kutip",
    "methods",
    "jadi",
    "verifikasi",
    "kondisi",
    "wibowo",
    "kendala",
    "l",
    "simpul",
    "dahulu",
    "diagram",
    "tahu",
    "html",
    "basis",
    "lemah",
    "home",
    "review",
    "sumber",
    "mampu",
    "akademik",
    "latih",
    "loss",
    "muncul",
    "jelas",
    "antar",
    "hasibuan",
    "fungsional",
    "arah",
    "optimal",
    "skom",
    "unggul",
    "tindak",
    "frontend",
    "windows",
    "baik",
    "efisien",
    "liput",
    "letak",
    "unit",
    "rancang",
    "akses",
    "kombinasi",
    "jaga",
    "isi",
    "didik",
    "q",
    "of",
    "studi",
    "rating",
    "prosesor",
    "arsitektur",
    "konsep",
    "sehat",
    "in",
    "komponen",
    "olah",
    "sistem",
    "registrasi",
    "mayasari",
    "tentu",
    "dukung",
    "software",
    "form",
    "gambar",
    "gantung",
    "kumpul",
    "persentase",
    "table",
    "desktop",
    "detail",
    "repositori",
    "adil",
    "desain",
    "buku",
    "fondasi",
    "aplikasi",
    "ajar",
    "ganti",
    "ilmu",
    "bentuk",
    "historis",
    "visual",
    "microsoft",
    "utama",
    "tingkat",
    "s",
    "media",
    "langkah",
    "artificial",
    "signifikan",
    "susun",
    "staf",
    "uji",
    "y",
    "interaksi",
    "global",
    "alas",
    "teknik",
    "eksplisit",
    "rinci",
    "bantu",
    "online",
    "muat",
    "dorong",
    "komprehensif",
    "langsung",
    "masalah",
    "iterasi",
    "format",
    "himpun",
    "antarmuka",
    "k",
    "metodologi",
    "ruang",
    "dr",
    "laptop",
    "no",
    "user",
    "masuk",
    "serta",
    "pustaka",
    "potensi",
    "sesuai",
    "satu",
    "fokus",
    "term",
    "ide",
    "server",
    "tambah",
    "transformasi",
    "ram",
    "urai",
    "n",
    "hitung",
    "backend",
    "learning",
    "baca",
    "jurnal",
    "bidang",
    "technology",
    "bangun",
    "bas",
    "manfaat",
    "instruksi",
    "program",
    "objek",
    "timbang",
    "konteks",
    "aspek",
    "fitur",
    "models",
    "pengaruh",
    "tafsir",
    "dokumentasi",
    "opsi",
    "username",
    "ulang",
    "b",
    "struktur",
    "network",
    "citra",
    "perangkat",
    "tantang",
    "r",
    "terima",
    "visualisasi",
    "mesti",
    "hapus",
    "negeri",
    "widodo",
    "manajemen",
    "kurang",
    "parameter",
    "komputer",
    "aktual"
  ],
  "filename": "1751659600_1751343871_SKRIPSI_sampe_bab_4.pdf",
  "user_id": 17
}